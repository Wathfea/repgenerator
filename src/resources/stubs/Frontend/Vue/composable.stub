import { ref } from 'vue'
import axios from 'axios'
import { useRouter } from 'vue-router'

export default function use{{modelNamePlural}}() {
    const {{modelNameSingularLowerCase}} = ref([])
    const {{modelNamePluralLowerCase}} = ref([])

    const errors = ref('')
    const router = useRouter()

    const meta = ref({
        current_page : 0,
        last_page : 0,
        from: 0,
        to : 0,
        total: 0
    });

    const get{{modelNamePlural}} = async (page, perPage) => {
        const params = new URLSearchParams({
            page: page,
            per_page: perPage,
        });

        let response = await axios.get('{{baseUrl}}/api/v1/{{modelNamePluralLowerCase}}?'+ params)
        {{modelNamePluralLowerCase}}.value = response.data.data;
        meta.value = response.data.meta;
    }

    const get{{modelNameSingular}} = async (id) => {
        let response = await axios.get(`{{baseUrl}}/api/v1/{{modelNamePluralLowerCase}}/${id}`)
        {{modelNameSingularLowerCase}}.value = response.data.data
    }

    const getSearch = async (searchInput, perPage) => {
        const params = new URLSearchParams({
            page: 1,
            search: searchInput,
            per_page: perPage,
        });
        axios.get('{{baseUrl}}/api/v1/{{modelNamePluralLowerCase}}?' + params).then((response) => {
            {{modelNamePluralLowerCase}}.value = response.data.data;
            meta.value = response.data.meta;
        })
    }

    const store{{modelNameSingular}} = async (data) => {
        errors.value = ''
        try {
            await axios.post('{{baseUrl}}/api/v1/{{modelNamePluralLowerCase}}', data)
            await router.push({ name: '{{modelNamePluralLowerCase}}.index' })
        } catch (e) {
            if (e.response.status === 422) {
                for (const key in e.response.data.errors) {
                    errors.value += e.response.data.errors[key][0] + ' ';
                }
            }
        }

    }

    const update{{modelNameSingular}} = async (id) => {
        errors.value = ''
        try {
            await axios.patch(`{{baseUrl}}/api/v1/{{modelNamePluralLowerCase}}/${id}`, {{modelNameSingularLowerCase}}.value)
            await router.push({ name: '{{modelNamePluralLowerCase}}.index' })
        } catch (e) {
            if (e.response.status === 422) {
                for (const key in e.response.data.errors) {
                    errors.value += e.response.data.errors[key][0] + ' ';
                }
            }
        }
    }

    const destroy{{modelNameSingular}} = async (id) => {
        await axios.delete(`{{baseUrl}}/api/v1/{{modelNamePluralLowerCase}}/${id}`)
    }

    return {
        errors,
        {{modelNameSingularLowerCase}},
        {{modelNamePluralLowerCase}},
        meta,
        get{{modelNameSingular}},
        get{{modelNamePlural}},
        getSearch,
        store{{modelNameSingular}},
        update{{modelNameSingular}},
        destroy{{modelNameSingular}}
    }
}
